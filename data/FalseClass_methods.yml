---
- :id: 0
  :callseqs:
  - false & obj   → false
  - nil & obj     → false
  :description:
  - |-
    And—Returns false. obj is always evaluated as it is
    the argument to a method call—there is no short-circuit evaluation in this
    case.
  :examples: ''
- :id: 1
  :callseqs:
  - obj === other   → true or false
  :description:
  - |-
    Case Equality – For class Object, effectively the
    same as calling #==, but typically overridden by descendants
    to provide meaningful semantics in case statements.
  :examples: ''
- :id: 2
  :callseqs:
  - false ^ obj    → true or false
  - nil   ^ obj    → true or false
  :description:
  - |-
    Exclusive Or—If obj is nil or false,
    returns false; otherwise, returns true.
  :examples: ''
- :id: 3
  :callseqs: []
  :description: []
  :examples: ''
- :id: 4
  :callseqs:
  - to_s   →  "false"
  :description:
  - "‘nuf said…"
  :examples: ''
- :id: 5
  :callseqs:
  - false | obj   →   true or false
  - nil   | obj   →   true or false
  :description:
  - |-
    Or—Returns false if obj is nil or
    false; true otherwise.
  :examples: ''
