---
:id: 21
:name: Encoding::UndefinedConversionError
:link: http://ruby-doc.org/core-2.4.1/Encoding/UndefinedConversionError.html
:methods:
- :id: 0
  :callseqs:
  - destination_encoding         → string
  :description:
  - Returns the destination encoding as an encoding object.
  :examples: ''
- :id: 1
  :callseqs:
  - destination_encoding_name         → string
  :description:
  - Returns the destination encoding name as a string.
  :examples: ''
- :id: 2
  :callseqs:
  - error_char         → string
  :description:
  - Returns the one-character string which cause Encoding::UndefinedConversionError.
  :examples: |
    ec = Encoding::Converter.new("ISO-8859-1", "EUC-JP")
    begin
      ec.convert("\xa0")
    rescue Encoding::UndefinedConversionError
      puts $!.error_char.dump   #=> "\xC2\xA0"
      p $!.error_char.encoding  #=> #<Encoding:UTF-8>
    end
- :id: 3
  :callseqs:
  - source_encoding              → encoding
  :description:
  - Returns the source encoding as an encoding object.
  - |-
    Note that the result may not be equal to the source encoding of the
    encoding converter if the conversion has multiple steps.
  :examples: |
    ec = Encoding::Converter.new("ISO-8859-1", "EUC-JP") # ISO-8859-1 -> UTF-8 -> EUC-JP
    begin
      ec.convert("\xa0") # NO-BREAK SPACE, which is available in UTF-8 but not in EUC-JP.
    rescue Encoding::UndefinedConversionError
      p $!.source_encoding              #=> #<Encoding:UTF-8>
      p $!.destination_encoding         #=> #<Encoding:EUC-JP>
      p $!.source_encoding_name         #=> "UTF-8"
      p $!.destination_encoding_name    #=> "EUC-JP"
    end
- :id: 4
  :callseqs:
  - source_encoding_name         → string
  :description:
  - Returns the source encoding name as a string.
  :examples: ''
